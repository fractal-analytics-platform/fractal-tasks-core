[tool.poetry]
name = "fractal-tasks-core"
version = "0.10.0a2"
description = ""
authors = [
    "Joel LÃ¼thi  <joel.luethi@fmi.ch>",
    "Tommaso Comparin <tommaso.comparin@exact-lab.it>",
    "Marco Franzon <marco.franzon@exact-lab.it>",
    "Jacopo Nespolo <jacopo.nespolo@exact-lab.it>",
]
readme = "README.md"
packages = [{include = "fractal_tasks_core"}]
license = "BSD-3-Clause"
homepage = "https://github.com/fractal-analytics-platform/fractal-tasks-core"
documentation = "https://fractal-tasks-core.readthedocs.io"

[tool.poetry.dependencies]

# Required dependencies
python = "^3.9"
dask = "~2023.1.0"
zarr = "~2.13.6"
numpy = "~1.23.5"
pandas = "^1.2.0"
defusedxml = "^0.7.1"
lxml = "^4.9.1"
pydantic = "<2"
docstring-parser = "^0.15"
anndata = "^0.8.0"

# Optional dependencies (used in extras)
Pillow = { version = "^9.1.1", optional = true }
imageio-ffmpeg = { version = "^0.4.7", optional = true }
scikit-image = { version = ">=0.19", optional = true }
llvmlite = { version = "^0.39.1", optional = true }
napari-segment-blobs-and-things-with-membranes = { version = "^0.3.3", optional = true }
napari-workflows = { version = "^0.2.8", optional = true }
napari-skimage-regionprops = { version = "^0.8.1", optional = true }
napari-tools-menu = { version = "^0.1.19", optional = true }
cellpose = { version = "~2.2", optional = true }
torch = { version = "<=2.0.0", optional = true }

[tool.poetry.extras]
fractal-tasks = ["Pillow", "imageio-ffmpeg", "scikit-image", "llvmlite", "napari-segment-blobs-and-things-with-membranes", "napari-workflows", "napari-skimage-regionprops", "napari-tools-menu", "cellpose", "torch"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.2"
devtools = "^0.8.0"
bumpver = "^2022.1116"
pytest-mock = "^3.8.1"
pre-commit = "^2.19.0"
coverage = {extras = ["toml"], version = "^6.4.4"}
memory-profiler = "^0.60.0"
zenodo-get = "^1.3.4"
jsonschema = "^4.16.0"
deptry = "^0.6.1"
napari-ome-zarr = "^0.5.2"
pytest-pretty = "^1.1.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^5.3.0"
sphinx-rtd-theme = "^1.1.1"
sphinx-autodoc-typehints = "^1.19.5"
autodocsumm = "^0.2.9"
sphinx-autodoc-defaultargs = "^0.1.2"
myst-parser = "^0.18.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
parallel = true
relative_files = true
source = ["fractal_tasks_core"]
omit = ["tests/*", "examples/*", "fractal_tasks_core/dev/*"]

[tool.bumpver]
current_version = "0.10.0a2"
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'version = "{version}"',
]
"docs/source/conf.py" = [
    'version = "{version}"',
]
"fractal_tasks_core/__init__.py" = [
    '__VERSION__ = "{version}"'
]


[tool.deptry]
exclude = [
  'tests', 'examples', 'docs'
]
